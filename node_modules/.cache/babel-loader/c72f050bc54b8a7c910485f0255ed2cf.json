{"ast":null,"code":"var _jsxFileName = \"/home/xdunkley/Development/code/phase_2/Phase-2-Project-Grumble/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport MusicPage from './MusicPage';\nimport MusicAdder from './MusicAdder';\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [musicInfo, setMusicInfo] = useState([]);\n  useEffect(() => {\n    fetch(\" http://localhost:4000/music\").then(response => response.json()).then(data => setMusicInfo(data));\n  }, []);\n  const [musicCategories, setMusicCatagories] = useState(\"All\");\n\n  function handleCategorieChange(event) {\n    setMusicCatagories(event.target.value);\n  }\n\n  let results = musicInfo;\n\n  if (musicCategories !== 'All') {\n    results = musicInfo.filter(song => {\n      if (song.genre === musicCategories) {\n        return song;\n      }\n    });\n  }\n\n  let songDictionary = {};\n  let songGenres = [/*#__PURE__*/_jsxDEV(\"option\", {\n    value: \"All\",\n    children: \"All\"\n  }, \"All\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this)];\n  musicInfo.forEach(song => {\n    let songGenre = song.genre;\n\n    if (!songDictionary[songGenre]) {\n      songDictionary[songGenre] = true;\n      songGenres.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: songGenre,\n        children: songGenre\n      }, songGenre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Filter\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"filter\",\n          onClick: handleCategorieChange,\n          children: songGenres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-music\",\n        element: /*#__PURE__*/_jsxDEV(MusicAdder, {\n          musicInfo: musicInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/music-page\",\n        element: /*#__PURE__*/_jsxDEV(MusicPage, {\n          results: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eDnbrq6kNgtISIxOX38i0bc+0bU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","MusicPage","MusicAdder","Routes","Route","App","musicInfo","setMusicInfo","fetch","then","response","json","data","musicCategories","setMusicCatagories","handleCategorieChange","event","target","value","results","filter","song","genre","songDictionary","songGenres","forEach","songGenre","push"],"sources":["/home/xdunkley/Development/code/phase_2/Phase-2-Project-Grumble/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './Header'\nimport MusicPage from './MusicPage'\nimport MusicAdder from './MusicAdder'\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [musicInfo, setMusicInfo]=useState([])\n\n  useEffect(()=>{\n    fetch(\" http://localhost:4000/music\")\n      .then((response)=>response.json())\n      .then((data)=>setMusicInfo(data))\n  },[])\n\n  \n  const [musicCategories,setMusicCatagories]=useState(\"All\")\n\n   function handleCategorieChange(event){\n       setMusicCatagories(event.target.value)\n   }\n\n   let results = musicInfo;\n   if (musicCategories !== 'All') {\n       results = musicInfo.filter((song)=>{\n           if(song.genre===musicCategories){\n               return(song)\n           }\n       })\n   }\n\n  let songDictionary = {};\n  let songGenres = [<option value=\"All\" key=\"All\">All</option>];\n  musicInfo.forEach((song) => {\n      let songGenre = song.genre;\n      if (!songDictionary[songGenre]) {\n          songDictionary[songGenre] = true;\n          songGenres.push(<option value={songGenre} key={songGenre}>{songGenre}</option>);\n      }\n  });\n  \n\n  return (\n\n    \n    <div className=\"App\">\n      <Header/>\n      <div className=\"nav-bar\">\n                <div className=\"Filter\">\n                    <select name=\"filter\" onClick={handleCategorieChange}>\n                        {songGenres}\n                    </select>\n                </div>   \n      </div>\n      <Routes>\n        <Route path=\"/add-music\"  element={<MusicAdder musicInfo={musicInfo}/>} />\n\n        <Route path=\"/music-page\" element={<MusicPage results={results}/>} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAI;IACZU,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAESG,IAAD,IAAQL,YAAY,CAACK,IAAD,CAF5B;EAGD,CAJQ,EAIP,EAJO,CAAT;EAOA,MAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAqCf,QAAQ,CAAC,KAAD,CAAnD;;EAEC,SAASgB,qBAAT,CAA+BC,KAA/B,EAAqC;IACjCF,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;EACH;;EAED,IAAIC,OAAO,GAAGb,SAAd;;EACA,IAAIO,eAAe,KAAK,KAAxB,EAA+B;IAC3BM,OAAO,GAAGb,SAAS,CAACc,MAAV,CAAkBC,IAAD,IAAQ;MAC/B,IAAGA,IAAI,CAACC,KAAL,KAAaT,eAAhB,EAAgC;QAC5B,OAAOQ,IAAP;MACH;IACJ,CAJS,CAAV;EAKH;;EAEF,IAAIE,cAAc,GAAG,EAArB;EACA,IAAIC,UAAU,GAAG,cAAC;IAAQ,KAAK,EAAC,KAAd;IAAA;EAAA,GAAwB,KAAxB;IAAA;IAAA;IAAA;EAAA,QAAD,CAAjB;EACAlB,SAAS,CAACmB,OAAV,CAAmBJ,IAAD,IAAU;IACxB,IAAIK,SAAS,GAAGL,IAAI,CAACC,KAArB;;IACA,IAAI,CAACC,cAAc,CAACG,SAAD,CAAnB,EAAgC;MAC5BH,cAAc,CAACG,SAAD,CAAd,GAA4B,IAA5B;MACAF,UAAU,CAACG,IAAX,eAAgB;QAAQ,KAAK,EAAED,SAAf;QAAA,UAA2CA;MAA3C,GAA+BA,SAA/B;QAAA;QAAA;QAAA;MAAA,QAAhB;IACH;EACJ,CAND;EASA,oBAGE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,SAAf;MAAA,uBACU;QAAK,SAAS,EAAC,QAAf;QAAA,uBACI;UAAQ,IAAI,EAAC,QAAb;UAAsB,OAAO,EAAEX,qBAA/B;UAAA,UACKS;QADL;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADV;MAAA;MAAA;MAAA;IAAA,QAFF,eASE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,YAAZ;QAA0B,OAAO,eAAE,QAAC,UAAD;UAAY,SAAS,EAAElB;QAAvB;UAAA;UAAA;UAAA;QAAA;MAAnC;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,aAAZ;QAA0B,OAAO,eAAE,QAAC,SAAD;UAAW,OAAO,EAAEa;QAApB;UAAA;UAAA;UAAA;QAAA;MAAnC;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QAHF;AAmBD;;GAvDQd,G;;KAAAA,G;AAyDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
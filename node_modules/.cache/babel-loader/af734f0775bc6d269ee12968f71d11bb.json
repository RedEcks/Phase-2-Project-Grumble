{"ast":null,"code":"var _jsxFileName = \"/home/xdunkley/Development/code/phase_2/Phase-2-Project-Grumble/src/MusicFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleFilter(_ref) {\n  _s();\n\n  let {\n    musicInfo\n  } = _ref;\n  console.log(\"Music Info\", musicInfo.genre);\n  const [musicCatagories, setMusicCatagories] = useState(\"All\");\n\n  function handleCatagorieChange(event) {\n    setMusicCatagories(event.target.value);\n  }\n\n  const results = musicInfo.filter(song => {\n    if (musicCatagories === \"All\") return true;\n    return song.genre === musicCatagories;\n  });\n  let songDictionary = {};\n  let songGenres = musicInfo.map(song => {\n    let songGenre = song.genre;\n\n    if (!songDictionary[songGenre]) {\n      songDictionary[songGenre] = true;\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: songGenre,\n        children: songGenre\n      }, songGenre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n    }\n  });\n  songGenres.unshift( /*#__PURE__*/_jsxDEV(\"option\", {\n    value: \"All\",\n    children: \"All\"\n  }, \"All\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 24\n  }, this));\n\n  /*#__PURE__*/\n  _jsxDEV(\"ul\", {\n    className: \"filtered-results\",\n    children: results.map(result => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: result,\n        children: result\n      }, result, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Filter\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"filter\",\n        onClick: handleCatagorieChange,\n        children: songGenres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(handleFilter, \"9Ohzdi8CzGDfm3SzI1dfCeE94GI=\");\n\nexport default handleFilter;","map":{"version":3,"names":["React","useState","handleFilter","musicInfo","console","log","genre","musicCatagories","setMusicCatagories","handleCatagorieChange","event","target","value","results","filter","song","songDictionary","songGenres","map","songGenre","unshift","result"],"sources":["/home/xdunkley/Development/code/phase_2/Phase-2-Project-Grumble/src/MusicFilter.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction handleFilter({musicInfo}){\n    console.log(\"Music Info\",musicInfo.genre)\n   const [musicCatagories,setMusicCatagories]=useState(\"All\")\n\n    function handleCatagorieChange(event){\n        setMusicCatagories(event.target.value)\n\n    }\n\n    const results = musicInfo.filter((song)=>{\n        if(musicCatagories===\"All\")return true;\n        return song.genre===musicCatagories;\n    })\n\n    \n    let songDictionary = {};\n    let songGenres = musicInfo.map((song) => {\n        let songGenre = song.genre;\n        if (!songDictionary[songGenre]) {\n            songDictionary[songGenre] = true;\n            return (<option value={songGenre} key={songGenre}>{songGenre}</option>);\n        }\n    });\n    songGenres.unshift(<option value=\"All\" key=\"All\">All</option>);\n    \n    <ul className=\"filtered-results\">\n        {results.map((result)=>{\n            return (<option value={result} key={result}>{result}</option>);\n        })}\n    </ul>\n\n    return(\n        <div className=\"nav-bar\">\n            <div className=\"Filter\">\n                <select name=\"filter\" onClick={handleCatagorieChange}>\n                    {/* <option value=\"All\" key=\"All\">All</option> */}\n                    {songGenres}\n                </select>\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default handleFilter;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,YAAT,OAAkC;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAC9BC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,SAAS,CAACG,KAAnC;EACD,MAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAqCP,QAAQ,CAAC,KAAD,CAAnD;;EAEC,SAASQ,qBAAT,CAA+BC,KAA/B,EAAqC;IACjCF,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;EAEH;;EAED,MAAMC,OAAO,GAAGV,SAAS,CAACW,MAAV,CAAkBC,IAAD,IAAQ;IACrC,IAAGR,eAAe,KAAG,KAArB,EAA2B,OAAO,IAAP;IAC3B,OAAOQ,IAAI,CAACT,KAAL,KAAaC,eAApB;EACH,CAHe,CAAhB;EAMA,IAAIS,cAAc,GAAG,EAArB;EACA,IAAIC,UAAU,GAAGd,SAAS,CAACe,GAAV,CAAeH,IAAD,IAAU;IACrC,IAAII,SAAS,GAAGJ,IAAI,CAACT,KAArB;;IACA,IAAI,CAACU,cAAc,CAACG,SAAD,CAAnB,EAAgC;MAC5BH,cAAc,CAACG,SAAD,CAAd,GAA4B,IAA5B;MACA,oBAAQ;QAAQ,KAAK,EAAEA,SAAf;QAAA,UAA2CA;MAA3C,GAA+BA,SAA/B;QAAA;QAAA;QAAA;MAAA,QAAR;IACH;EACJ,CANgB,CAAjB;EAOAF,UAAU,CAACG,OAAX,eAAmB;IAAQ,KAAK,EAAC,KAAd;IAAA;EAAA,GAAwB,KAAxB;IAAA;IAAA;IAAA;EAAA,QAAnB;;EAEA;EAAA;IAAI,SAAS,EAAC,kBAAd;IAAA,UACKP,OAAO,CAACK,GAAR,CAAaG,MAAD,IAAU;MACnB,oBAAQ;QAAQ,KAAK,EAAEA,MAAf;QAAA,UAAqCA;MAArC,GAA4BA,MAA5B;QAAA;QAAA;QAAA;MAAA,QAAR;IACH,CAFA;EADL;IAAA;IAAA;IAAA;EAAA;;EAMA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,uBACI;MAAK,SAAS,EAAC,QAAf;MAAA,uBACI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEZ,qBAA/B;QAAA,UAEKQ;MAFL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;;GA3CQf,Y;;AA6CT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}
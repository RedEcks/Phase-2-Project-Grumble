{"ast":null,"code":"var _jsxFileName = \"/home/xdunkley/Development/code/phase_2/Phase-2-Project-Grumble/src/MusicAdder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HandleMusicAdder(_ref) {\n  _s();\n\n  let {\n    musicInfo\n  } = _ref;\n  const [newMusicArtist, setNewMusicArtist] = useState(\"\");\n  const [newMusicImageURL, setNewMusicImageURL] = useState(\"\");\n  const [newMusicAlbum, setNewMusicAlbum] = useState(\"\");\n  const [newMusicGenre, setNewMusicGenre] = useState(\"\");\n  const [newMusicID, setNewMusicID] = useState(musicInfo.length);\n\n  function handleChange(event) {\n    event.preventDefault();\n    let newID = setNewMusicID(newMusicID + 1);\n    setNewMusicArtist(event.target.value);\n    setNewMusicImageURL(event.target.value);\n    setNewMusicAlbum(event.target.value);\n    setNewMusicGenre(event.target.value);\n    const newMusicData = {\n      id: newID,\n      artist: newMusicArtist,\n      image: newMusicImageURL,\n      album: newMusicAlbum,\n      genre: newMusicGenre\n    };\n    return newMusicData;\n  }\n\n  console.log(\"New Music Data\", newMusicData);\n  console.log(\"music length\", musicInfo.length);\n\n  function handleSubmit(event) {\n    event.preventDefault(); // let newID=setNewMusicID(newMusicID + 1)\n    // const newMusicData=  {\n    //     id: newID,\n    //     artist: newMusicArtist,\n    //     image: newMusicImageURL,\n    //     album: newMusicAlbum,\n    //     genre: newMusicGenre,\n    //     }\n\n    console.log(\"event\", event);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Artist/Band\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"image\",\n        placeholder: \"Image URL\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Album\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Genre\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onSubmit: handleSubmit,\n        children: \"Add Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HandleMusicAdder, \"nS1ovPfwNv/vDZ8HmA2R+3Vxy5k=\");\n\n_c = HandleMusicAdder;\nexport default HandleMusicAdder;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleMusicAdder\");","map":{"version":3,"names":["React","useState","HandleMusicAdder","musicInfo","newMusicArtist","setNewMusicArtist","newMusicImageURL","setNewMusicImageURL","newMusicAlbum","setNewMusicAlbum","newMusicGenre","setNewMusicGenre","newMusicID","setNewMusicID","length","handleChange","event","preventDefault","newID","target","value","newMusicData","id","artist","image","album","genre","console","log","handleSubmit"],"sources":["/home/xdunkley/Development/code/phase_2/Phase-2-Project-Grumble/src/MusicAdder.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nfunction HandleMusicAdder({musicInfo}){\n    const [newMusicArtist, setNewMusicArtist]=useState(\"\")\n    const [newMusicImageURL, setNewMusicImageURL]=useState(\"\")\n    const [newMusicAlbum, setNewMusicAlbum]=useState(\"\")\n    const [newMusicGenre, setNewMusicGenre]=useState(\"\")\n    const [newMusicID, setNewMusicID]=useState(musicInfo.length)\n\n    function handleChange(event){\n        event.preventDefault();\n        let newID=setNewMusicID(newMusicID + 1)\n        setNewMusicArtist(event.target.value)\n        setNewMusicImageURL(event.target.value)\n        setNewMusicAlbum(event.target.value)\n        setNewMusicGenre(event.target.value)\n        const newMusicData=  {\n                id: newID,\n                artist: newMusicArtist,\n                image: newMusicImageURL,\n                album: newMusicAlbum,\n                genre: newMusicGenre,\n                }\n        return(newMusicData)\n    }\n        \n        console.log(\"New Music Data\", newMusicData)\n        console.log(\"music length\", musicInfo.length)\n    \n\n    function handleSubmit(event){\n        event.preventDefault();\n        // let newID=setNewMusicID(newMusicID + 1)\n        // const newMusicData=  {\n        //     id: newID,\n        //     artist: newMusicArtist,\n        //     image: newMusicImageURL,\n        //     album: newMusicAlbum,\n        //     genre: newMusicGenre,\n        //     }\n        console.log(\"event\", event)\n    }\n\n\n    return(\n        <div>\n            <form>\n                <input type=\"text\" name=\"name\" placeholder=\"Artist/Band\" onChange={handleChange} />\n                <input type=\"text\" name=\"image\" placeholder=\"Image URL\" onChange={handleChange}/>\n                <input type=\"text\" name=\"name\" placeholder=\"Album\" onChange={handleChange}/>\n                <input type=\"text\" name=\"name\" placeholder=\"Genre\" onChange={handleChange}/>\n                <button type=\"submit\" onSubmit={handleSubmit}>Add Music</button>\n            </form>\n        </div>\n    )\n}\n\nexport default HandleMusicAdder;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,gBAAT,OAAsC;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EAClC,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAoCJ,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACW,UAAD,EAAaC,aAAb,IAA4BZ,QAAQ,CAACE,SAAS,CAACW,MAAX,CAA1C;;EAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;IACxBA,KAAK,CAACC,cAAN;IACA,IAAIC,KAAK,GAACL,aAAa,CAACD,UAAU,GAAG,CAAd,CAAvB;IACAP,iBAAiB,CAACW,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAjB;IACAb,mBAAmB,CAACS,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAnB;IACAX,gBAAgB,CAACO,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAhB;IACAT,gBAAgB,CAACK,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAhB;IACA,MAAMC,YAAY,GAAG;MACbC,EAAE,EAAEJ,KADS;MAEbK,MAAM,EAAEnB,cAFK;MAGboB,KAAK,EAAElB,gBAHM;MAIbmB,KAAK,EAAEjB,aAJM;MAKbkB,KAAK,EAAEhB;IALM,CAArB;IAOA,OAAOW,YAAP;EACH;;EAEGM,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,YAA9B;EACAM,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BzB,SAAS,CAACW,MAAtC;;EAGJ,SAASe,YAAT,CAAsBb,KAAtB,EAA4B;IACxBA,KAAK,CAACC,cAAN,GADwB,CAExB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IACAU,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;EACH;;EAGD,oBACI;IAAA,uBACI;MAAA,wBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,WAAW,EAAC,aAA3C;QAAyD,QAAQ,EAAED;MAAnE;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,OAAxB;QAAgC,WAAW,EAAC,WAA5C;QAAwD,QAAQ,EAAEA;MAAlE;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,WAAW,EAAC,OAA3C;QAAmD,QAAQ,EAAEA;MAA7D;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,MAAxB;QAA+B,WAAW,EAAC,OAA3C;QAAmD,QAAQ,EAAEA;MAA7D;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAQ,IAAI,EAAC,QAAb;QAAsB,QAAQ,EAAEc,YAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH;;GArDQ3B,gB;;KAAAA,gB;AAuDT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}